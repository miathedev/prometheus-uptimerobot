[project]
name = "ws.prometheus_uptimerobot"
description = "Export uptimerobot.com monitor results as prometheus.io metrics"
dynamic = ["dependencies", "version", "readme"]
authors = [
    {name="Wolfgang Schnerring", email="wosc@wosc.de"},
    {name="Mia Metzler", email="mia@metzler.systems"}
]
license = {text=" BSD-3-Clause"}
urls = {Repository="https://github.com/wosc/prometheus-uptimerobot"}
requires-python = ">=3.7"

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

[project.optional-dependencies]
test = [
  "pytest>=6.0",
  "pytest-cov>=4.0",
  "pytest-mock>=3.0",
  "responses>=0.20",
  "setuptools",
  "werkzeug",
]

[project.scripts]
uptimerobot_exporter_cgi = "ws.prometheus_uptimerobot.web:cgi"
uptimerobot_exporter = "ws.prometheus_uptimerobot.web:serve"


[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/ws"]  # required for pep420 namespace package, pypa/hatch#587
strict-naming = false  # required for proper output filename
[tool.hatch.build.targets.sdist]
strict-naming = false  # required for proper output filename

[tool.hatch.version]
path = "src/ws/prometheus_uptimerobot/__init__.py"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/x-rst"
fragments = [{path="README.rst"}, {text="\n\n"}, {path="CHANGES.txt"}]


[tool.hatch.envs.default]
# Make work on older OS
python = "3"
dependencies = ["pip>=23"]


[tool.hatch.envs.test]
features = ["test"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers", 
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=src/ws/prometheus_uptimerobot",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=85"
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]


[tool.hatch.envs.release]
skip-install = true
dependencies = ["towncrier"]

[tool.towncrier]
directory = "changelog/"
filename = "CHANGES.txt"
title_format = ""  # changelog file already has a title
# First underline is used for version/date header.
# Second underline is used for the type names (like 'Bug fixes:').
underlines = ["-", "+"]

[[tool.towncrier.type]]
directory = "change"
name = "Changes"  # I'd love to omit the category, but that requires copy&paste of the whole template
showcontent = true